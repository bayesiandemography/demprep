% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/format_age.R
\name{format_age_lifetab}
\alias{format_age_lifetab}
\title{Create consistent, complete life table age group}
\usage{
format_age_lifetab(x, break_max = 100)
}
\arguments{
\item{x}{A vector of age group labels.}

\item{break_max}{An integer or \code{NULL}.
Defaults to 100.}
}
\value{
A factor with the same length as \code{x}.
}
\description{
Given a vector of age group labels, create a \code{\link[base]{factor}} that contains
levels for all ages between \code{0} and \code{break_max},
plus an open age group (ie an age group with no upper limit.)
The age groups created by \code{format_age_lifetab}
are the ones typically used in
"abridged" life tables: \code{"0"},
\code{"1-4"}, \code{"5-9"}, \code{"10-14"}, and so on up to the
highest age group, which is always open.
}
\details{
\code{break_max} is used to specify
the oldest age group.
If \code{break_max} is \code{NULL}, the oldest
age group is derived from the data.

All age groups in \code{x} must fall within the intervals
\code{"0"}, \code{"1-4"}, \code{"5-9"}, \dots.

If \code{x} contains \code{NA}, then the
levels of the factor created by \code{format_age_lifetab}
also contain \code{NA}.
}
\examples{
format_age_lifetab(x = c("100+", "14", "1-4"))

## set oldest age group to 50+
format_age_lifetab(x = c("100+", "14", "1-4"),
                   break_max = 80)
}
\seealso{
Other functions for reformating
age group labels are
\itemize{
  \item \code{\link{format_age_year}}
  \item \code{\link{format_age_multi}}
  \item \code{\link{format_age_births}}
  \item \code{\link{format_age_custom}}
  \item \code{\link{format_age_quarter}}
  \item \code{\link{format_age_month}}
}
\code{\link{date_to_age_year}} calculates
ages from dates.
}
